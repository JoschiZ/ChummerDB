@using ChummerDB.Blazor.ComponentLibrary.Backend.xml
@inherits MvvmComponentBase<IArmorsViewModel>

@if (ViewModel.Armors is null)
{
    <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate />
}
else
{
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5" Color="Color.Primary">Armors</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <DataGridFilterControl DataGrid="DataGrid" ParentStateHasChanged="StateHasChanged"></DataGridFilterControl>
                <MudDataGrid 
                    @ref="DataGrid" 
                    Dense 
                    Items="@ViewModel.Armors" 
                    Groupable 
                    Hideable 
                    FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive" 
                    ShowColumnOptions 
                    Filterable 
                    SortMode="SortMode.Multiple" 
                    FixedHeader>
                    <Columns>
                        <HierarchyColumn></HierarchyColumn>
                        <PropertyColumn Property="armor => armor.Name" Title="Name"></PropertyColumn>
                        
                        <PropertyColumn Property="armor => armor.GetDisplayString()" Title="Armor" Filterable="false" Comparer="@(new MudBlazor.Utilities.NaturalComparer())"></PropertyColumn>
                        <PropertyColumn Property="armor => armor.ArmorClass.GetInt()" Title="Armor" Hidden></PropertyColumn>
                        <PropertyColumn Property="armor => armor.StackingArmor" Title="Stacking Armor" Hidden></PropertyColumn>
                        
                        <PropertyColumn Property="armor => armor.ArmorCapacity" Title="Capacity" Filterable="false" Comparer="@(new MudBlazor.Utilities.NaturalComparer())"></PropertyColumn>
                        <PropertyColumn Property="armor => armor.ArmorCapacity.GetInt()" Title="Capacity" Hidden></PropertyColumn>
                        
                        <PropertyColumn Property="armor => armor.Availability" Title="Availability" Filterable="false" Comparer="@(new MudBlazor.Utilities.NaturalComparer())"></PropertyColumn>
                        <PropertyColumn Property="armor => armor.GetAvailabilityInt()" Title="Availability" Hidden></PropertyColumn>
                        <PropertyColumn Property="armor => armor.GetLegality()" Title="Legality" Hidden></PropertyColumn>
                        
                        <PropertyColumn Property="armor => armor.GetCostString()" Filterable="false" Title="Cost" Comparer="@(new MudBlazor.Utilities.NaturalComparer())"></PropertyColumn>
                        <PropertyColumn Property="armor => armor.GetIntCost()" Title="Cost" Hidden></PropertyColumn>
                        
                        <PropertyColumn Property="armor => armor.Source" Title="Source" Hidden></PropertyColumn>
                        <TemplateColumn Title="Source" Filterable="false">
                            <CellTemplate>
                                <DisplaySource SourceObject="@context.Item"></DisplaySource>
                            </CellTemplate>
                        </TemplateColumn>
                        <PropertyColumn Property="armor => armor.Category" Grouping Hidden>
                            <GroupTemplate>
                                <span style="font-weight:bold">Category: @context.Grouping.Key <MudChip Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small">total @context.Grouping.Count()</MudChip></span>
                            </GroupTemplate>
                        </PropertyColumn>
                    </Columns>
                    <ChildRowContent>
                        <ArmorCard Item="@context.Item"></ArmorCard>
                    </ChildRowContent>
                </MudDataGrid>
        </MudCardContent>
    </MudCard>
}

@code
{
    public MudDataGrid<Armor>? DataGrid { get; set; }
}
