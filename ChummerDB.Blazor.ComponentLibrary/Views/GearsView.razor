@using ChummerDB.Blazor.ComponentLibrary.Backend.xml.Gear
@inherits MvvmComponentBase<IGearsViewModel>
@inject ILogger<GearsView> Logger

@if (ViewModel.Items is null)
{
    <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate />
}
else
{
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5" Color="Color.Primary">General Gear</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <DataGridFilterControl DataGrid="DataGrid" ParentStateHasChanged="StateHasChanged"></DataGridFilterControl>
            <MudDataGrid 
                @ref="DataGrid" 
                Dense 
                Items="@ViewModel.Items" 
                Groupable 
                Hideable 
                FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive" 
                ShowColumnOptions 
                Filterable 
                SortMode="SortMode.Multiple" 
                FixedHeader>
                <Columns>
                    <HierarchyColumn></HierarchyColumn>
                    <PropertyColumn Property="item => item.Name" Title="Name"></PropertyColumn>
                        
                    <PropertyColumn Property="item => item.Availability" Title="Availability" Filterable="false" Comparer="@(new MudBlazor.Utilities.NaturalComparer())"></PropertyColumn>
                    <PropertyColumn Property="item => item.GetAvailabilityInt()" Title="Availability" Hidden></PropertyColumn>
                    <PropertyColumn Property="item => item.GetLegality()" Title="Legality" Hidden></PropertyColumn>
                        
                    <PropertyColumn Property="item => item.GetCostString()" Filterable="false" Title="Cost" Comparer="@(new MudBlazor.Utilities.NaturalComparer())"></PropertyColumn>
                    <PropertyColumn Property="item => item.GetIntCost()" Title="Cost" Hidden></PropertyColumn>
                        
                    <PropertyColumn Property="item => item.Source" Title="Source" Hidden></PropertyColumn>
                    <TemplateColumn Title="Source" Filterable="false">
                        <CellTemplate>
                            <DisplaySource SourceObject="@context.Item"></DisplaySource>
                        </CellTemplate>
                    </TemplateColumn>
                    <PropertyColumn Property="item => item.Category" Grouping Hidden>
                        <GroupTemplate>
                            <span style="font-weight:bold">Category: @context.Grouping.Key <MudChip Variant="Variant.Outlined" Color="Color.Info" Size="Size.Small">total @context.Grouping.Count()</MudChip></span>
                        </GroupTemplate>
                    </PropertyColumn>
                </Columns>
                <ChildRowContent>
                    <!--Gear Card-->
                </ChildRowContent>
            </MudDataGrid>
        </MudCardContent>
    </MudCard>
    <p>@ViewModel.Items.Count</p>
}

@code
{
    public MudDataGrid<Gear>? DataGrid { get; set; }
}
